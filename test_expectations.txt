# VDP Frame Parser - Expected Test Results
# Format: Line <number>: <input> => <status> [<details>]
# Note: These expectations match the actual parser output

# ===== VALID FRAMES =====
# 7E0801100001187F - Read data from ECU 0x01
Line 6: 7E0801100001187F => SUCCESS  ECU=0x1 CMD=0x10 DATA=[00 01]

# 7E0A811000123456EB7F - Response: Success with data
Line 7: 7E0A811000123456EB7F => SUCCESS  ECU=0x81 CMD=0x10 DATA=[00 12 34 56]

# ===== INVALID FRAMES =====
# 7E070130317F - Clear codes for ECU 0x01 (too short)
Line 8: 7E070130317F => INVALID: Frame too short for checksum verification (size: 5)

# 7E0681300018F7F - Response: Success (invalid end byte 0xF7)
Line 9: 7E0681300018F7F => INVALID: Invalid end byte, expected 0x7F

# 7E09024012345645F7F - ECU Reset with parameters (invalid end byte 0xF7)
Line 10: 7E09024012345645F7F => INVALID: Invalid end byte, expected 0x7F

# 7E0682400155F7F - Response: Success (invalid end byte 0xF7)
Line 11: 7E0682400155F7F => INVALID: Invalid end byte, expected 0x7F

# 7E0C7F100048656C6C6F00B67F - Read from ECU 0x7F (edge case, invalid end byte)
Line 12: 7E0C7F100048656C6C6F00B67F => INVALID: Invalid end byte, expected 0x7F

# 7E0CFF100048656C6C6F00367F - Response from ECU 0x7F (invalid end byte)
Line 13: 7E0CFF100048656C6C6F00367F => INVALID: Invalid end byte, expected 0x7F

# 7E0B011000010200FD1A7F - Read parameter 0x0001 or 0x0100? (checksum fail)
Line 14: 7E0B011000010200FD1A7F => INVALID: Checksum verification failed: calculated=0x1b, expected=0x1a

# 7E0D8110000001000002008E8F7F - Response with 16-bit values (invalid end byte)
Line 15: 7E0D8110000001000002008E8F7F => INVALID: Invalid end byte, expected 0x7F

# ===== FRAMES WITH ERRORS =====
# 7E08011000011B7F - Bad checksum (should be 18)
Line 18: 7E08011000011B7F => INVALID: Checksum verification failed: calculated=0x18, expected=0x1b

# 7D08011000011A7F - Wrong start byte
Line 19: 7D08011000011A7F => Garbage data at start of buffer, resyncing

# 7E08011000011A7E - Wrong end byte
Line 20: 7E08011000011A7E => INVALID: Invalid end byte, expected 0x7F

# 7E03011A7F - Length too short
Line 21: 7E03011A7F => INVALID: Invalid frame length 3 (expected 6-255)

# 7E08011000017F - Missing data byte
Line 22: 7E08011000017F => INVALID: Invalid frame length 8 (expected 6-255)

# 7EFF011000 - Incomplete frame
Line 23: 7EFF011000 => INCOMPLETE: Partial frame, waiting for 253 more bytes

# 7E0C01107E7F0001020369F7F - Data contains start/end bytes
Line 24: 7E0C01107E7F0001020369F7F => INVALID: Invalid end byte, expected 0x7F

# ===== EDGE CASES =====
# 7E0701101F7F - Minimum valid frame
Line 27: 7E0701101F7F => SUCCESS  ECU=0x1 CMD=0x10 DATA=[]

# 7E0A0350000102039F7F - Keep-alive with data
Line 28: 7E0A0350000102039F7F => SUCCESS  ECU=0x3 CMD=0x50 DATA=[00 01 02 03]

# 7E088110021C7F - Response: Invalid data error
Line 29: 7E088110021C7F => SUCCESS  ECU=0x81 CMD=0x10 DATA=[02]

# 7EFF7F10...7E7F - Maximum length frame (255 bytes)
Line 30: 7EFF7F10...7E7F => SUCCESS [ECU:0x7F CMD:0x10 DATA:...]

# ===== MULTIPLE FRAMES =====
Line 30: 7E08011000011A7F7E0A8110001234569F7F7E070130317F7E0681300018F7F =>
    FRAME 1: INVALID: Checksum verification failed: calculated=0x18, expected=0x1a
    FRAME 2: SUCCESS  ECU=0x81 CMD=0x10 DATA=[00 12 34 56]
    FRAME 3: SUCCESS  ECU=0x1 CMD=0x30 DATA=[]
    FRAME 4: INVALID: Invalid end byte, expected 0x7F

# ===== PARTIAL FRAME =====
Line 33: 7E08011000011A7F7E0A811000 =>
    FRAME 1: SUCCESS  ECU=0x1 CMD=0x10 DATA=[00 01]
    FRAME 2: INCOMPLETE: Partial frame, waiting for 2 more bytes
